/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WalletsRouteImport } from './routes/wallets'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as BudgetsRouteImport } from './routes/budgets'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MainWalletsIndexRouteImport } from './routes/main/wallets/index'
import { Route as MainBudgetsIndexRouteImport } from './routes/main/budgets/index'
import { Route as MainWalletsCreateRouteImport } from './routes/main/wallets/create'
import { Route as MainBudgetsCreateRouteImport } from './routes/main/budgets/create'

const WalletsRoute = WalletsRouteImport.update({
  id: '/wallets',
  path: '/wallets',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const BudgetsRoute = BudgetsRouteImport.update({
  id: '/budgets',
  path: '/budgets',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainWalletsIndexRoute = MainWalletsIndexRouteImport.update({
  id: '/main/wallets/',
  path: '/main/wallets/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainBudgetsIndexRoute = MainBudgetsIndexRouteImport.update({
  id: '/main/budgets/',
  path: '/main/budgets/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainWalletsCreateRoute = MainWalletsCreateRouteImport.update({
  id: '/main/wallets/create',
  path: '/main/wallets/create',
  getParentRoute: () => rootRouteImport,
} as any)
const MainBudgetsCreateRoute = MainBudgetsCreateRouteImport.update({
  id: '/main/budgets/create',
  path: '/main/budgets/create',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/budgets': typeof BudgetsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/wallets': typeof WalletsRoute
  '/main/budgets/create': typeof MainBudgetsCreateRoute
  '/main/wallets/create': typeof MainWalletsCreateRoute
  '/main/budgets': typeof MainBudgetsIndexRoute
  '/main/wallets': typeof MainWalletsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/budgets': typeof BudgetsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/wallets': typeof WalletsRoute
  '/main/budgets/create': typeof MainBudgetsCreateRoute
  '/main/wallets/create': typeof MainWalletsCreateRoute
  '/main/budgets': typeof MainBudgetsIndexRoute
  '/main/wallets': typeof MainWalletsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/budgets': typeof BudgetsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/wallets': typeof WalletsRoute
  '/main/budgets/create': typeof MainBudgetsCreateRoute
  '/main/wallets/create': typeof MainWalletsCreateRoute
  '/main/budgets/': typeof MainBudgetsIndexRoute
  '/main/wallets/': typeof MainWalletsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/budgets'
    | '/login'
    | '/register'
    | '/wallets'
    | '/main/budgets/create'
    | '/main/wallets/create'
    | '/main/budgets'
    | '/main/wallets'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/budgets'
    | '/login'
    | '/register'
    | '/wallets'
    | '/main/budgets/create'
    | '/main/wallets/create'
    | '/main/budgets'
    | '/main/wallets'
  id:
    | '__root__'
    | '/'
    | '/budgets'
    | '/login'
    | '/register'
    | '/wallets'
    | '/main/budgets/create'
    | '/main/wallets/create'
    | '/main/budgets/'
    | '/main/wallets/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BudgetsRoute: typeof BudgetsRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  WalletsRoute: typeof WalletsRoute
  MainBudgetsCreateRoute: typeof MainBudgetsCreateRoute
  MainWalletsCreateRoute: typeof MainWalletsCreateRoute
  MainBudgetsIndexRoute: typeof MainBudgetsIndexRoute
  MainWalletsIndexRoute: typeof MainWalletsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/wallets': {
      id: '/wallets'
      path: '/wallets'
      fullPath: '/wallets'
      preLoaderRoute: typeof WalletsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/budgets': {
      id: '/budgets'
      path: '/budgets'
      fullPath: '/budgets'
      preLoaderRoute: typeof BudgetsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/wallets/': {
      id: '/main/wallets/'
      path: '/main/wallets'
      fullPath: '/main/wallets'
      preLoaderRoute: typeof MainWalletsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/budgets/': {
      id: '/main/budgets/'
      path: '/main/budgets'
      fullPath: '/main/budgets'
      preLoaderRoute: typeof MainBudgetsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/wallets/create': {
      id: '/main/wallets/create'
      path: '/main/wallets/create'
      fullPath: '/main/wallets/create'
      preLoaderRoute: typeof MainWalletsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/budgets/create': {
      id: '/main/budgets/create'
      path: '/main/budgets/create'
      fullPath: '/main/budgets/create'
      preLoaderRoute: typeof MainBudgetsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BudgetsRoute: BudgetsRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  WalletsRoute: WalletsRoute,
  MainBudgetsCreateRoute: MainBudgetsCreateRoute,
  MainWalletsCreateRoute: MainWalletsCreateRoute,
  MainBudgetsIndexRoute: MainBudgetsIndexRoute,
  MainWalletsIndexRoute: MainWalletsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
